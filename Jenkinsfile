pipeline {
    agent any

    environment {
        DATA_PATH = "data/"  // Assure-toi que les fichiers train.csv et test.csv se trouvent dans ce dossier
        MODEL_PATH = "models/"
    }

    stages {
        stage('Cloner le repository') {
            steps {
                script {
                    // Cloner ton repository GitHub
                    echo "üõ†Ô∏è Clonage du repository..."
                    git branch: 'main', url: 'https://github.com/ouassim16wass/mini-projet.git'
                }
            }
        }

        stage('Installer les d√©pendances') {
            steps {
                script {
                    // Installer les d√©pendances avec pip √† partir du fichier requirements.txt
                    echo "üì¶ Installation des d√©pendances..."
                    bat 'python -m pip install --no-cache-dir -r requirements.txt || echo "‚ùå Erreur lors de l\'installation des d√©pendances" && exit 1'
                }
            }
        }

        stage('Pr√©traitement des donn√©es') {
            steps {
                script {
                    // V√©rifie que les fichiers de donn√©es existent dans le dossier "data"
                    echo "üöÄ D√©marrage du pr√©traitement des donn√©es..."
                    if (fileExists("${DATA_PATH}train.csv") && fileExists("${DATA_PATH}test.csv")) {
                        echo "‚úîÔ∏è Les fichiers de donn√©es existent, traitement lanc√©."
                        // Lancer le pr√©traitement des donn√©es avec preprocessing.py
                        bat 'python preprocessing.py || echo "‚ùå Erreur lors du pr√©traitement des donn√©es" && exit 1'
                    } else {
                        error "‚ùå Les fichiers de donn√©es train.csv et test.csv sont manquants."
                    }
                }
            }
        }

        stage('Entra√Ænement du mod√®le') {
            steps {
                script {
                    // Lancer l'entra√Ænement du mod√®le
                    echo "üöÄ D√©but de l'entra√Ænement du mod√®le..."
                    bat 'python train.py || echo "‚ùå Erreur lors de l\'entra√Ænement du mod√®le" && exit 1'
                }
            }
        }

        stage('√âvaluation du mod√®le') {
            steps {
                script {
                    // √âvaluer les performances du mod√®le
                    echo "üìä √âvaluation des performances du mod√®le..."
                    bat 'python evaluate.py || echo "‚ùå Erreur lors de l\'√©valuation du mod√®le" && exit 1'
                }
            }
        }

        stage('Stockage des artefacts') {
            steps {
                script {
                    // Archiver les mod√®les g√©n√©r√©s (par exemple, rf_model.pkl, dt_model.pkl)
                    echo "üîê Sauvegarde des artefacts du mod√®le..."
                    archiveArtifacts artifacts: 'rf_model.pkl, dt_model.pkl, ann_model.pkl', fingerprint: true
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Pipeline termin√© avec succ√®s ! ‚úÖ"
        }
        failure {
            echo "üö® Le pipeline a √©chou√© ! V√©rifie les logs Jenkins."
        }
    }
}
